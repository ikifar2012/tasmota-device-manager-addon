#!/usr/bin/with-contenv bashio
# shellcheck shell=bash
# ==============================================================================
# Start TDM
# ==============================================================================
TMP_FOLDER=$(mktemp -d)
VNC_PORT="$(bashio::addon.port 5900)"
ARCH="$(bashio::info.arch)"
DEBUG=$(bashio::config "debug")
export HOME='/share/tdm'
mkdir -p ${HOME}/.vnc
(
    echo "vncconfig --nowin &"
    echo "exec i3"
    echo "SecurityTypes=None"
) > ${HOME}/.vnc/xstartup
chmod 755 ${HOME}/.vnc/xstartup
# ln -s /usr/lib/x86_64-linux-gnu/libxcb-util.so.0.0.0 /usr/lib/x86_64-linux-gnu/libxcb-util.so.1

# Get MQTT config
if bashio::services.available "mqtt"; then
    MQTT_HOST=$(bashio::services "mqtt" "host")
    MQTT_PASSWORD=$(bashio::services "mqtt" "password")
    MQTT_PORT=$(bashio::services "mqtt" "port")
    MQTT_USER=$(bashio::services "mqtt" "username")
    (
        echo "[General]"
        echo "connect_on_startup=true"
        echo "hostname=${MQTT_HOST}"
        echo "password=${MQTT_PASSWORD}"
        echo "port=${MQTT_PORT}"
        echo "username=${MQTT_USER}"
    ) > ${HOME}/TDM/tdm.cfg
fi
# Run it only on localhost if not expose
if bashio::var.has_value "${VNC_PORT}"; then
    bashio::log.warning "Your direct VNC access is not protected!"
    LOCAL_ONLY=no
else
    LOCAL_ONLY=yes
    echo "localhost" > ${HOME}/.vnc/config
fi

export BROWSER=/usr/bin/firefox-esr
export XDG_RUNTIME_DIR="${TMP_FOLDER}"
export DISPLAY=":0"

bashio::log.info "Starting VNC server (local/${LOCAL_ONLY})..."
if [ "$DEBUG" = true ] ; then
vncserver \
    "${DISPLAY}" \
    &
else
vncserver \
    "${DISPLAY}" \
    &>/dev/null
fi

# Wait for VNC server to start before continuing
bashio::log.info "TDM waiting for VNC to start"
bashio::net.wait_for 5900

# Start TDM
bashio::log.info "Starting tdmgr..."
exec /usr/bin/python3 /usr/bin/tdmgr.py